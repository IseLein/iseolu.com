---
import { getCollection } from "astro:content";

const essays = await getCollection("blog");
const tagDescriptions = await getCollection("tags");

const allTags = essays.map(essay => essay.data.tags).flat();
const tagCounts = allTags.reduce((acc, tag) => {
    acc[tag] = (acc[tag] || 0) + 1;
    return acc;
}, {} as Record<string, number>);
const sortedTags = Object.entries(tagCounts).sort((a, b) => b[1] - a[1]);
---
<div class="tags">
    {sortedTags.map(tag => (
        <div class="tag">
            <a href={`/tags/${tag[0]}`}>#{tag[0]}:{tag[1]}</a>
            <span>{tagDescriptions.find(desc => desc.id === tag[0])?.data.description}</span>
        </div>
    ))}
</div>

<style>
    .tag {
        font-size: 1.2em;
        display: flex;
        justify-content: space-between;
        gap: 1em;
        padding-bottom: 1em;
    }

    .tag span {
        text-align: right;
    }
    @media (min-width: 768px) {
        .tag {
            font-size: 1.5em;
        }
    }
</style>
